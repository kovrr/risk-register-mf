import { ISO27001FormInitialValues } from '@/security/ISO/formInitialValues';
import { chance } from 'mocks/builders/buildingUtils';
import { buildSecurityScorecardCompany } from 'mocks/builders/securityscorecardBuilders';
import { SphereForm } from 'types/sphereForm';
import { CompanyApiData, CompanyStatus } from '../../types/companyForm';
import {
  buildCisV8SecurityProfiles,
  buildCompany,
  buildCompanyWithSphere,
  buildNistV2SecurityProfiles,
} from '../builders/companyBuilder';
import { MOCK_TECH_SERVICE } from '../data/hazardMock';

const fullSphere: SphereForm = {
  employee_endpoints: [
    {
      group_name: 'Banun',
      number_of_endpoints: 1,
      os: ['windows'],
      pci_access: false,
      phi_access: true,
      productivity_reliance: 13,
      income_reliance: 44,
      technologies_used: [
        'web:Microsoft:Microsoft HTTP Server API:*',
        'web:Nginx:Nginx:*',
        'os:Microsoft:Windows Server:*',
        'db:Teradata:Teradata:*',
        'db:IBM:IBM Db2:*',
        'db:PostgreSQL:PostgreSQL:*',
        'db:Oracle:MySQL:*',
      ],
    },
  ],
  cloud: [],
  infrastructure: [
    {
      group_name: 'Banditos',
      os: ['linux', 'batata'],
      pci_stored: 1000,
      phi_stored: 11,
      other_sensitive_stored: true,
      technologies_used: [
        'web:Microsoft:Microsoft HTTP Server API:*',
        'web:Nginx:Nginx:*',
        'os:Microsoft:Windows Server:*',
        'db:Teradata:Teradata:*',
        'db:IBM:IBM Db2:*',
        'db:PostgreSQL:PostgreSQL:*',
        'db:Oracle:MySQL:*',
      ],
      productivity_reliance: 100,
      income_reliance: 90,
      max_number_of_records_stored_together: 100,
    },
  ],
  ot: [],
  security: {
    certificates: ['SOC', 'ISO'],
    outage_hours_to_material_impact: 111,
    hours_to_restore_critical_business_ops_after_interruption: 123,
    cis_implementation_level: {
      ICSA: 3,
      ICHA: 3,
      CVM: 1,
      CUAP: 1,
      SCHS: 0,
      MMAAL: 0,
      EWBP: 0,
      MD: 0,
      LCNPPS: 0,
      DRC: 0,
      SCND: 0,
      BD: 0,
      DP: 0,
      CAB: 0,
      WAC: 0,
      AMC: 0,
      ISA: 0,
      ASS: 0,
      IRM: 0,
      PTRT: 0,
    },
  },
};

const tenantId = chance.guid();
export const companiesResults: CompanyApiData[] = [
  buildCompany({
    id: '30fcc708-af5b-566c-99fe-a3885758d36b',
    quantification_ids: ['running-fq-id'],
    tenant_id: tenantId,
    name: 'ready for data collection resultsV0',
    last_quantification: {
      id: 'running-fq-id',
      status: 'Running',
      created_at: '2020-01-01T00:00:00.000Z',
      updated_at: '2020-01-01T00:00:00.000Z',
    },
    status: CompanyStatus.READY_FOR_DATA_COLLECTION,
    is_sphere_valid: true,
  }),
  buildCompanyWithSphere({
    tenant_id: tenantId,
    name: 'Past Quantifications',
  }),

  buildCompany({
    id: '685ae1e0-2b50-46d7-8078-7f4a02531d80',
    tenant_id: tenantId,
    name: 'Complete resultsV0 Run',
    quantification_ids: ['finished-cis-fq-id'],
    last_quantification: {
      id: 'finished-cis-fq-id',
      status: 'Success',
      created_at: '2020-01-01T00:00:00.000Z',
      updated_at: '2020-01-01T00:00:00.000Z',
    },
    status: CompanyStatus.COMPLETED,
    is_sphere_valid: true,
    sphere: {
      employee_endpoints: [
        { group_name: 'bla', os: ['linux'], tech: [], income_reliance: 77 },
      ],
      cloud: [
        {
          group_name: 'Asset Group 1',
          pci_stored: 1232,
          phi_stored: 123,
          pii_stored: 123,
          providers_used: [
            'paas:Microsoft:Microsoft Azure:',
            'paas:Microsoft:microsoft dynamics 365:global',
            'paas:Google:GCP:',
          ],
          productivity_reliance: 100,
          income_reliance: 100,
          max_number_of_records_stored_together: 123,
        },
      ],
      infrastructure: [
        {
          group_name: 'bla',
          os: ['windows'],
          isNew: false,
          productivity_reliance: 875,
        },
      ],
      ot: undefined,
      security: { certificates: [], cis_implementation_level: {} },
      custom_cost_components: [
        {
          cc_name: 'Custom CC',
          asset_groups: [],
          cost_dist: {
            max_val: 10000,
            min_val: 100,
            mode_val: 1000,
          },
          event_type: 'data_breach',
          impact_scenario: 'liability',
        },
      ],
    },
  }),

  buildCompany({
    id: '685ae1e0-2b50-46d7-8078-7f4a02531d85',
    tenant_id: tenantId,
    name: 'CIS Company Risk Dimensions',
    quantification_ids: ['new-schema-cis-fq-id', 'finished-second-cis-fq-id'],
    last_quantification: {
      id: 'new-schema-cis-fq-id',
      status: 'Success',
      created_at: '2023-01-01T00:00:00.000Z',
      updated_at: '2023-01-01T00:00:00.000Z',
      results_narrative: {
        input_stats: {
          asset_group_information: {},
          controls_average: {},
        },
        simulation_exposure: {
          high_exposure_loss: 100,
          aal: 100,
          low_exposure_loss: 100,
          targeted_annual_rate: 100,
          targeted_benchmark_annual_rate: 100,
          top_simulation_stats: {
            num_of_records_affected: {
              avg: 0,
              std: 0,
              median: 0,
              percentiles: {},
            },
            event_duration: { avg: 0, std: 0, median: 0, percentiles: {} },
            event_loss: { avg: 0, std: 0, median: 0, percentiles: {} },
          },
          ep_curve: [],
          ep_curve1000: [],
        },
        control_scenarios: {
          by_asset_group: {},
          by_control_to_minimal: {},
        },
        simulation_stats: {
          cc_average_ratio_per_coverage: {
            bi: {},
            contingent_bi: {},
            extortion: {},
            liability: {},
            privacy: {},
            regulatory: {},
          },
          num_events_that_caused_damage: {},
          hazard_distribution: {},
          mitre_initial_vector_distribution: {},
          targeted_intensity_parameter_statistics: {
            data_scale: { avg: 0, std: 0, median: 0, percentiles: {} },
            duration: { avg: 0, std: 0, median: 0, percentiles: {} },
            effect_rate: { avg: 0, std: 0, median: 0, percentiles: {} },
          },
          cat_intensity_parameter_statistics: {
            data_scale: { mean: 0, median: 0, std: 0, maximum: 0 },
            duration: { mean: 0, median: 0, std: 0, maximum: 0 },
            effect_rate: { mean: 0, median: 0, std: 0, maximum: 0 },
          },
          criticality_distribution: {
            reliance: { cloud: 0, infrastructure: 0 },
            data_records: { cloud: 0, infrastructure: 0 },
          },
          control_frequency_effect: {},
        },
        by_third_party_exposure: {
          high_exposure_loss: 100,
          aal: 100,
          low_exposure_loss: 100,
          targeted_annual_rate: 100,
          targeted_benchmark_annual_rate: 100,
          top_simulation_stats: {
            num_of_records_affected: {
              avg: 0,
              std: 0,
              median: 0,
              percentiles: {},
            },
            event_duration: { avg: 0, std: 0, median: 0, percentiles: {} },
            event_loss: { avg: 0, std: 0, median: 0, percentiles: {} },
          },
          ep_curve: [],
          ep_curve1000: [],
        },
        by_scenario_exposure: {
          bi: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
            ep_curve: [],
            ep_curve1000: [],
            damage_types: [],
            events: [],
          },
          contingent_bi: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
            ep_curve: [],
            ep_curve1000: [],
            damage_types: [],
            events: [],
          },
          extortion: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
            ep_curve: [],
            ep_curve1000: [],
            damage_types: [],
            events: [],
          },
          liability: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
            ep_curve: [],
            ep_curve1000: [],
            damage_types: [],
            events: [],
          },
          privacy: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
            ep_curve: [],
            ep_curve1000: [],
            damage_types: [],
            events: [],
          },
          regulatory: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
            ep_curve: [],
            ep_curve1000: [],
            damage_types: [],
            events: [],
          },
        },
        by_event_type_exposure: {
          data_breach: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
          },
          ransomware: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
          },
          interruption: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
          },
          attritional: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
          },
        },
        by_service_provider_event_type_exposure: {
          service_provider_interruption: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
          },
          service_provider_data_breach: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
          },
        },
        by_initial_vector_exposure: {
          phishing: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
          },
          'valid accounts': {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
          },
          'human error': {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
          },
        },
      },
      include_results_narrative: true,
    },
    status: CompanyStatus.COMPLETED,
    is_sphere_valid: true,
    sphere: {
      employee_endpoints: [
        { group_name: 'bla', os: ['linux'], tech: [], income_reliance: 77 },
      ],
      cloud: [
        {
          group_name: 'Asset Group 1',
          pci_stored: 1232,
          phi_stored: 123,
          pii_stored: 123,
          providers_used: [
            'paas:Microsoft:Microsoft Azure:',
            'paas:Microsoft:microsoft dynamics 365:global',
            'paas:Google:GCP:',
          ],
          productivity_reliance: 100,
          income_reliance: 100,
          max_number_of_records_stored_together: 123,
        },
      ],
      infrastructure: [
        {
          group_name: 'bla',
          os: ['windows'],
          isNew: false,
          productivity_reliance: 875,
        },
      ],
      ot: undefined,
      security: { certificates: [], cis_implementation_level: {} },
      custom_cost_components: [
        {
          cc_name: 'Custom CC',
          asset_groups: [],
          cost_dist: {
            max_val: 10000,
            min_val: 100,
            mode_val: 1000,
          },
          event_type: 'data_breach',
          impact_scenario: 'liability',
        },
      ],
    },
  }),
  buildCompany({
    id: '685ae1e0-2b50-46d7-8079-7f4a02531d85',
    tenant_id: tenantId,
    name: 'Security Scorecard Company',
    quantification_ids: ['new-schema-cis-fq-id', 'finished-second-cis-fq-id'],
    last_quantification: {
      id: 'new-schema-cis-fq-id',
      status: 'Success',
      created_at: '2023-01-01T00:00:00.000Z',
      updated_at: '2023-03-01T00:00:00.000Z',
      results_narrative: {
        input_stats: {
          asset_group_information: {},
          controls_average: {},
        },
        simulation_exposure: {
          high_exposure_loss: 100,
          aal: 100,
          low_exposure_loss: 100,
          targeted_annual_rate: 100,
          targeted_benchmark_annual_rate: 100,
          top_simulation_stats: {
            num_of_records_affected: {
              avg: 0,
              std: 0,
              median: 0,
              percentiles: {},
            },
            event_duration: { avg: 0, std: 0, median: 0, percentiles: {} },
            event_loss: { avg: 0, std: 0, median: 0, percentiles: {} },
          },
          ep_curve: [],
          ep_curve1000: [],
        },
        control_scenarios: {
          by_asset_group: {},
          by_control_to_minimal: {},
        },
        simulation_stats: {
          cc_average_ratio_per_coverage: {
            bi: {},
            contingent_bi: {},
            extortion: {},
            liability: {},
            privacy: {},
            regulatory: {},
          },
          num_events_that_caused_damage: {},
          hazard_distribution: {},
          mitre_initial_vector_distribution: {},
          targeted_intensity_parameter_statistics: {
            data_scale: { avg: 0, std: 0, median: 0, percentiles: {} },
            duration: { avg: 0, std: 0, median: 0, percentiles: {} },
            effect_rate: { avg: 0, std: 0, median: 0, percentiles: {} },
          },
          cat_intensity_parameter_statistics: {
            data_scale: { mean: 0, median: 0, std: 0, maximum: 0 },
            duration: { mean: 0, median: 0, std: 0, maximum: 0 },
            effect_rate: { mean: 0, median: 0, std: 0, maximum: 0 },
          },
          criticality_distribution: {
            reliance: { cloud: 0, infrastructure: 0 },
            data_records: { cloud: 0, infrastructure: 0 },
          },
          control_frequency_effect: {},
        },
        by_third_party_exposure: {
          high_exposure_loss: 100,
          aal: 100,
          low_exposure_loss: 100,
          targeted_annual_rate: 100,
          targeted_benchmark_annual_rate: 100,
          top_simulation_stats: {
            num_of_records_affected: {
              avg: 0,
              std: 0,
              median: 0,
              percentiles: {},
            },
            event_duration: { avg: 0, std: 0, median: 0, percentiles: {} },
            event_loss: { avg: 0, std: 0, median: 0, percentiles: {} },
          },
          ep_curve: [],
          ep_curve1000: [],
        },
        by_scenario_exposure: {
          bi: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
            ep_curve: [],
            ep_curve1000: [],
            damage_types: [],
            events: [],
          },
          contingent_bi: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
            ep_curve: [],
            ep_curve1000: [],
            damage_types: [],
            events: [],
          },
          extortion: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
            ep_curve: [],
            ep_curve1000: [],
            damage_types: [],
            events: [],
          },
          liability: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
            ep_curve: [],
            ep_curve1000: [],
            damage_types: [],
            events: [],
          },
          privacy: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
            ep_curve: [],
            ep_curve1000: [],
            damage_types: [],
            events: [],
          },
          regulatory: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
            ep_curve: [],
            ep_curve1000: [],
            damage_types: [],
            events: [],
          },
        },
        by_event_type_exposure: {
          data_breach: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
          },
          ransomware: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
          },
          interruption: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
          },
          attritional: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
          },
        },
        by_service_provider_event_type_exposure: {
          service_provider_interruption: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
          },
          service_provider_data_breach: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
          },
        },
        by_initial_vector_exposure: {
          phishing: {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
          },
          'valid accounts': {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
          },
          'trusted relationship': {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
          },
          'content injection': {
            high_exposure_loss: 100,
            aal: 100,
            low_exposure_loss: 100,
            targeted_annual_rate: 100,
            targeted_benchmark_annual_rate: 100,
          },
        },
      },
      include_results_narrative: false,
    },
    status: CompanyStatus.COMPLETED,
    is_sphere_valid: true,
    integrations: {
      securityscorecard: {
        sphere: true,
        hazard: true,
        data: { data: buildSecurityScorecardCompany() },
      },
    },
    sphere: {
      employee_endpoints: [
        { group_name: 'bla', os: ['linux'], tech: [], income_reliance: 77 },
      ],
      cloud: [
        {
          group_name: 'Asset Group 1',
          pci_stored: 1232,
          phi_stored: 123,
          pii_stored: 123,
          providers_used: [
            'paas:Microsoft:Microsoft Azure:',
            'paas:Microsoft:microsoft dynamics 365:global',
            'paas:Google:GCP:',
          ],
          productivity_reliance: 100,
          income_reliance: 100,
          max_number_of_records_stored_together: 123,
        },
      ],
      infrastructure: [
        {
          group_name: 'bla',
          os: ['windows'],
          isNew: false,
          productivity_reliance: 875,
        },
      ],
      ot: undefined,
      security: { certificates: [], cis_implementation_level: {} },
      custom_cost_components: [
        {
          cc_name: 'Custom CC',
          asset_groups: [],
          cost_dist: {
            max_val: 10000,
            min_val: 100,
            mode_val: 1000,
          },
          event_type: 'data_breach',
          impact_scenario: 'liability',
        },
      ],
      security_scorecard_security_rating: chance.integer({ min: 0, max: 100 }),
    },
  }),
  buildCompany({
    id: '685ae1e0-2b50-46d7-8078-7f4a02531d89',
    tenant_id: tenantId,
    name: 'New Schema CIS - multiple fqs',
    quantification_ids: ['new-schema-cis-fq-id', 'finished-second-cis-fq-id'],
    last_quantification: {
      id: 'new-schema-cis-fq-id',
      status: 'Success',
      created_at: '2023-01-01T00:00:00.000Z',
      updated_at: '2023-01-01T00:00:00.000Z',
      include_results_narrative: true,
    },
    status: CompanyStatus.COMPLETED,
    is_sphere_valid: true,
    sphere: {
      employee_endpoints: [
        { group_name: 'bla', os: ['linux'], tech: [], income_reliance: 77 },
      ],
      cloud: [
        {
          group_name: 'Asset Group 1',
          pci_stored: 1232,
          phi_stored: 123,
          pii_stored: 123,
          providers_used: [
            'paas:Microsoft:Microsoft Azure:',
            'paas:Microsoft:microsoft dynamics 365:global',
            'paas:Google:GCP:',
          ],
          productivity_reliance: 100,
          income_reliance: 100,
          max_number_of_records_stored_together: 123,
        },
      ],
      infrastructure: [
        {
          group_name: 'bla',
          os: ['windows'],
          isNew: false,
          productivity_reliance: 875,
        },
      ],
      ot: undefined,
      security: { certificates: [], cis_implementation_level: {} },
      custom_cost_components: [
        {
          cc_name: 'Custom CC',
          asset_groups: [],
          cost_dist: {
            max_val: 10000,
            min_val: 100,
            mode_val: 1000,
          },
          event_type: 'data_breach',
          impact_scenario: 'liability',
        },
      ],
    },
  }),
  buildCompany({
    id: '685ae1e0-2b50-46d7-8078-7f4a02531d86',
    tenant_id: tenantId,
    name: 'New Schema CIS',
    quantification_ids: ['new-schema-cis-fq-id'],
    hazard: MOCK_TECH_SERVICE,
    last_quantification: {
      id: 'new-schema-cis-fq-id',
      status: 'Success',
      created_at: '2020-01-01T00:00:00.000Z',
      updated_at: '2020-01-01T00:00:00.000Z',
      include_results_narrative: true,
    },
    status: CompanyStatus.COMPLETED,
    is_sphere_valid: true,
    sec_controls_framework: 'CIS',
    sphere: {
      employee_endpoints: [
        { group_name: 'bla', os: ['linux'], tech: [], income_reliance: 77 },
      ],
      cloud: [
        {
          group_name: 'Asset Group 1',
          pci_stored: 1232,
          phi_stored: 123,
          pii_stored: 123,
          providers_used: [
            'paas:Microsoft:Microsoft Azure:',
            'paas:Microsoft:microsoft dynamics 365:global',
            'paas:Google:GCP:',
          ],
          productivity_reliance: 100,
          income_reliance: 100,
          max_number_of_records_stored_together: 123,
        },
      ],
      infrastructure: [
        {
          group_name: 'bla',
          os: ['windows'],
          isNew: false,
          productivity_reliance: 875,
        },
      ],
      ot: undefined,
      security: { certificates: [], cis_implementation_level: {} },
      custom_cost_components: [
        {
          cc_name: 'Custom CC',
          asset_groups: [],
          cost_dist: {
            max_val: 10000,
            min_val: 100,
            mode_val: 1000,
          },
          event_type: 'data_breach',
          impact_scenario: 'liability',
        },
      ],
    },
  }),
  buildCompany({
    id: '685ae1e0-2b50-46d7-8078-7f4a02531d84',
    tenant_id: tenantId,
    name: 'New Schema CIS v8',
    quantification_ids: ['new-schema-cis-v8-fq-id'],
    hazard: MOCK_TECH_SERVICE,
    last_quantification: {
      id: 'new-schema-cis-v8-fq-id',
      status: 'Success',
      created_at: '2020-01-01T00:00:00.000Z',
      updated_at: '2020-01-01T00:00:00.000Z',
      include_results_narrative: true,
    },
    status: CompanyStatus.COMPLETED,
    is_sphere_valid: true,
    sec_controls_framework: 'CISv8',
    sphere: {
      employee_endpoints: [
        { group_name: 'bla', os: ['linux'], tech: [], income_reliance: 77 },
      ],
      cloud: [
        {
          group_name: 'Asset Group 1',
          pci_stored: 1232,
          phi_stored: 123,
          pii_stored: 123,
          providers_used: [
            'paas:Microsoft:Microsoft Azure:',
            'paas:Microsoft:microsoft dynamics 365:global',
            'paas:Google:GCP:',
          ],
          productivity_reliance: 100,
          income_reliance: 100,
          max_number_of_records_stored_together: 123,
        },
      ],
      infrastructure: [
        {
          group_name: 'bla',
          os: ['windows'],
          isNew: false,
          productivity_reliance: 875,
        },
      ],
      ot: undefined,
      security: { certificates: [], cis_implementation_level: {} },
      security_profiles: buildCisV8SecurityProfiles(),
      custom_cost_components: [
        {
          cc_name: 'Custom CC',
          asset_groups: [],
          cost_dist: {
            max_val: 10000,
            min_val: 100,
            mode_val: 1000,
          },
          event_type: 'data_breach',
          impact_scenario: 'liability',
        },
      ],
    },
  }),
  buildCompany({
    tenant_id: tenantId,
    name: 'Empty Sphere',
    quantification_ids: [],
    status: CompanyStatus.READY_FOR_RUN,
    is_sphere_valid: false,
    sphere: undefined,
  }),
  buildCompany({
    id: '685ae1e0-2b50-46d7-7777-7f4a02531d84',
    tenant_id: tenantId,
    name: 'New Schema ISO',
    revenue: 10_000_000,
    quantification_ids: ['new-schema-iso-fq-id'],
    last_quantification: {
      id: 'new-schema-iso-fq-id',
      status: 'Success',
      created_at: '2020-01-01T00:00:00.000Z',
      updated_at: '2020-01-01T00:00:00.000Z',
      include_results_narrative: true,
    },
    status: CompanyStatus.COMPLETED,
    is_sphere_valid: true,
    sec_controls_framework: 'ISO27001',
    sphere: {
      employee_endpoints: [
        { group_name: 'bla', os: ['linux'], tech: [], income_reliance: 77 },
      ],
      cloud: [
        {
          group_name: 'Asset Group 1',
          pci_stored: 1232,
          phi_stored: 123,
          pii_stored: 123,
          providers_used: [
            'paas:Microsoft:Microsoft Azure:',
            'paas:Microsoft:microsoft dynamics 365:global',
            'paas:Google:GCP:',
          ],
          productivity_reliance: 100,
          income_reliance: 100,
          max_number_of_records_stored_together: 123,
        },
      ],
      infrastructure: [
        {
          group_name: 'bla',
          os: ['windows'],
          isNew: false,
          productivity_reliance: 875,
        },
      ],
      ot: undefined,
      security: {
        certificates: [],
        iso27001_implementation_level: ISO27001FormInitialValues,
      },
      custom_cost_components: [
        {
          cc_name: 'Custom CC',
          asset_groups: [],
          cost_dist: {
            max_val: 10000,
            min_val: 100,
            mode_val: 1000,
          },
          event_type: 'data_breach',
          impact_scenario: 'liability',
        },
      ],
    },
  }),
  buildCompany({
    id: '68599999-2b50-46d7-8078-7f4a02531d84',
    tenant_id: tenantId,
    name: 'Schema CIS one old fq',
    quantification_ids: ['68599999-2b50-46d7-8078-7f4a02531d84'],
    hazard: MOCK_TECH_SERVICE,
    last_quantification: {
      id: '68599999-2b50-46d7-8078-7f4a02531d84',
      status: 'Success',
      created_at: '2020-01-01T00:00:00.000Z',
      updated_at: '2020-01-01T00:00:00.000Z',
    },
    status: CompanyStatus.COMPLETED,
    is_sphere_valid: true,
    sphere: {
      employee_endpoints: [
        { group_name: 'bla', os: ['linux'], tech: [], income_reliance: 77 },
      ],
      cloud: [
        {
          group_name: 'Asset Group 1',
          pci_stored: 1232,
          phi_stored: 123,
          pii_stored: 123,
          providers_used: [
            'paas:Microsoft:Microsoft Azure:',
            'paas:Microsoft:microsoft dynamics 365:global',
            'paas:Google:GCP:',
          ],
          productivity_reliance: 100,
          income_reliance: 100,
          max_number_of_records_stored_together: 123,
        },
      ],
      infrastructure: [
        {
          group_name: 'bla',
          os: ['windows'],
          isNew: false,
          productivity_reliance: 875,
        },
      ],
      ot: undefined,
      security: { certificates: [], cis_implementation_level: {} },
      custom_cost_components: [
        {
          cc_name: 'Custom CC',
          asset_groups: [],
          cost_dist: {
            max_val: 10000,
            min_val: 100,
            mode_val: 1000,
          },
          event_type: 'data_breach',
          impact_scenario: 'liability',
        },
      ],
    },
  }),
  buildCompany({
    id: '685ae1e0-2b50-46d7-8078-7f4a02531d82',
    tenant_id: tenantId,
    name: 'New Schema Nist',
    quantification_ids: ['new-schema-nist-fq-id'],
    last_quantification: {
      id: 'new-schema-nist-fq-id',
      status: 'Success',
      created_at: '2020-01-01T00:00:00.000Z',
      updated_at: '2020-01-01T00:00:00.000Z',
      include_results_narrative: true,
    },
    status: CompanyStatus.COMPLETED,
    is_sphere_valid: true,
    sec_controls_framework: 'NIST',
    sphere: {
      employee_endpoints: [
        { group_name: 'bla', os: ['linux'], tech: [], income_reliance: 77 },
      ],
      cloud: [
        {
          group_name: 'Asset Group 1',
          pci_stored: 1232,
          phi_stored: 123,
          pii_stored: 123,
          providers_used: [
            'paas:Microsoft:Microsoft Azure:',
            'paas:Microsoft:microsoft dynamics 365:global',
            'paas:Google:GCP:',
          ],
          productivity_reliance: 100,
          income_reliance: 100,
          max_number_of_records_stored_together: 123,
        },
      ],
      infrastructure: [
        {
          group_name: 'bla',
          os: ['windows'],
          isNew: false,
          productivity_reliance: 875,
        },
      ],
      ot: undefined,
      security: {
        certificates: [],
        nist_implementation_level: {
          ID_AM: 3,
          ID_BE: 3,
          ID_GV: 3,
          ID_RA: 3,
          ID_RM: 3,
          ID_SC: 3,
        },
        control_scope: 'category',
      },
      custom_cost_components: [
        {
          cc_name: 'Custom CC',
          asset_groups: [],
          cost_dist: {
            max_val: 10000,
            min_val: 100,
            mode_val: 1000,
          },
          event_type: 'data_breach',
          impact_scenario: 'liability',
        },
      ],
    },
  }),
  buildCompany({
    id: '748a7g34-2b50-46d7-8078-8d7202531ef8',
    tenant_id: tenantId,
    name: 'NIST Run',
    quantification_ids: ['finished-fq-id'],
    last_quantification: {
      id: 'finished-fq-id',
      status: 'Success',
      created_at: '2020-01-01T00:00:00.000Z',
      updated_at: '2020-01-01T00:00:00.000Z',
    },
    status: CompanyStatus.COMPLETED,
    is_sphere_valid: true,
    sec_controls_framework: 'NIST',
  }),
  buildCompany({
    id: 'nist-v2-test-company-12345',
    tenant_id: tenantId,
    name: 'NIST v2 Test Company',
    quantification_ids: ['nist-v2-fq-id'],
    last_quantification: {
      id: 'nist-v2-fq-id',
      status: 'Success',
      created_at: '2024-01-01T00:00:00.000Z',
      updated_at: '2024-01-01T00:00:00.000Z',
    },
    status: CompanyStatus.COMPLETED,
    is_sphere_valid: true,
    sec_controls_framework: 'NIST_CSF_v2',
    sphere: {
      employee_endpoints: [
        { group_name: 'bla', os: ['linux'], tech: [], income_reliance: 77 },
      ],
      cloud: [
        {
          group_name: 'Asset Group 1',
          pci_stored: 1232,
          phi_stored: 123,
          pii_stored: 123,
          providers_used: [
            'paas:Microsoft:Microsoft Azure:',
            'paas:Microsoft:microsoft dynamics 365:global',
            'paas:Google:GCP:',
          ],
          productivity_reliance: 100,
          income_reliance: 100,
          max_number_of_records_stored_together: 123,
        },
      ],
      infrastructure: [
        {
          group_name: 'bla',
          os: ['windows'],
          isNew: false,
          productivity_reliance: 875,
        },
      ],
      ot: [],
      security: {
        certificates: [],
      },
      security_profiles: buildNistV2SecurityProfiles([
        { name: 'Asset Group 1', type: 'cloud' },
        { name: 'Asset Group 2', type: 'infrastructure' },
      ]),
      custom_cost_components: [
        {
          cc_name: 'Custom CC',
          asset_groups: [],
          cost_dist: {
            max_val: 10000,
            min_val: 100,
            mode_val: 1000,
          },
          event_type: 'data_breach',
          impact_scenario: 'liability',
        },
      ],
    },
  }),
  buildCompany({
    quantification_ids: ['running-fq-id'],
    tenant_id: tenantId,
    last_quantification: {
      id: 'running-fq-id',
      status: 'Running',
      created_at: '2020-01-01T00:00:00.000Z',
      updated_at: '2020-01-01T00:00:00.000Z',
    },
    status: CompanyStatus.READY_FOR_DATA_COLLECTION,
    is_sphere_valid: true,
  }),
  buildCompany({
    tenant_id: tenantId,
    quantification_ids: [],
    status: CompanyStatus.READY_FOR_RUN,
    is_sphere_valid: false,
    sphere: fullSphere,
  }),
  buildCompany(),
  buildCompany(),
  buildCompany(),
  buildCompany(),
  buildCompany(),
  buildCompany(),
  buildCompany(),
  buildCompany(),
];
