# reusable workflow to install NPM dependencies
# and run Cypress tests across N machines in using cypress-split
# https://github.com/bahmutov/cypress-split
name: split
on:
  workflow_call:
    inputs:
      nE2E:
        description: 'Number of parallel containers for running E2E specs'
        type: number
        required: false
        default: 0
      nComponent:
        description: 'Number of parallel containers for running Component specs'
        type: number
        required: false
        default: 0
      # a common command to run before parallel jobs
      before-run:
        description: 'A command to run once before all parallel jobs'
        type: string
        required: false
      # standard parameters
      config:
        description: 'Set configuration values. Separate multiple values with a comma. The values set here override any values set in your configuration file.'
        type: string
        required: false
      config-file:
        description: 'Path to a JSON file where configuration values are set.'
        type: string
        required: false
      env:
        description: 'Sets Cypress environment variables'
        type: string
        required: false
      browser:
        description: 'Name of the browser to use'
        type: string
        required: false
      command:
        description: 'Command that overrides cypress run'
        type: string
        required: false
      start:
        description: 'Command for starting local server in the background'
        type: string
        required: false
      start-windows:
        description: 'A different start command on Windows'
        type: string
        required: false
      build:
        description: 'Command to run in build step before starting tests'
        type: string
        required: false
      install-command:
        description: 'Custom install command to use'
        type: string
        required: false
      runTests:
        description: 'Whether or not to run tests'
        type: boolean
        required: false
        default: true
      wait-on:
        description: 'Local server URL to wait for'
        type: string
        required: false
      wait-on-timeout:
        description: 'Amount of time to wait for wait-on url to be available'
        type: number
        required: false
        # default is 60 seconds
        default: 60
      working-directory:
        description: 'Working directory containing Cypress folder'
        type: string
        required: false
      headed:
        description: 'Whether or not to use headed mode'
        type: boolean
        required: false
      spec:
        description: 'Provide a specific specs to run'
        type: string
        required: false
      skip-spec:
        description: 'Provide a list of specs to NOT run'
        type: string
        required: false
      project:
        description: 'Path of project to run'
        type: string
        required: false
      command-prefix:
        description: 'You can prefix the default test command using the command-prefix option.'
        type: string
        required: false
      quiet:
        description: 'Whether or not to silence any Cypress specific output from stdout'
        type: boolean
        required: false
        default: false
      # custom input parameters
      debug-inputs:
        description: 'Print the workflow inputs'
        type: boolean
        required: false
        default: false
      debug:
        description: 'Set the environment variable DEBUG'
        type: string
        required: false
        default: ''
      store-artifacts:
        description: 'Store screenshots and videos from the cypress folder'
        type: boolean
        required: false
        default: true
      marge:
        description: |
          Download the Mochawesome results from all test jobs
          and merge into a single report
        type: boolean
        required: false
        default: false
      coverage:
        description: |
          Download all coverage results from all test jobs
          and merge into a single coverage report
        type: boolean
        required: false
        default: false
      # we are setting it true by default for the split workflow
      # since this workflow has its own GHA summary via cypress-split plugin
      publish-summary:
        description: 'Whether or not to publish job summary'
        type: boolean
        required: false
        default: false
      # use the following split configuration/timings file
      split-file:
        description: 'E2E split timings file to use and merge back'
        type: string
        required: false
    outputs:
      merged-timings:
        description: 'Combined timings JSON from split files'
        value: ${{ jobs.merge-split-timings.outputs.timings }}

env:
  FRONTEGG_AUTH_URL: https://auth.kov-test.notprod.me
  FRONTEGG_APPLICATION_ID: your-application-id
  RUNNING_IN_CYPRESS: true
  HOTJAR_ENABLED: false
  ELASTIC_APM_ENABLED: false

jobs:
  prepare:
    runs-on: ubuntu-24.04
    # explicitly set the output of this job
    # so that other jobs can use it
    outputs:
      matrixE2E: ${{ steps.prepareE2E.outputs.matrix }}
      matrixComponent: ${{ steps.prepareComponent.outputs.matrix }}
    steps:
      # generate the list using a bash script
      - name: Create E2E container matrix ‚äπ
        id: prepareE2E
        # for reusable workflow, must use the full action reference
        uses: bahmutov/gh-build-matrix@main
        with:
          # number of containers to use for running E2E tests
          n: ${{ inputs.nE2E }}

      - name: Create component container matrix ‚äπ
        id: prepareComponent
        # for reusable workflow, must use the full action reference
        uses: bahmutov/gh-build-matrix@main
        with:
          # number of containers to use for running component tests
          n: ${{ inputs.nComponent }}

      - name: Print result üñ®
        run: echo '${{ steps.prepareE2E.outputs.matrix }}'

      # by installing dependencies once
      # we cache them
      - name: Checkout üõé
        uses: actions/checkout@v4
      - name: enable corepack
        run: corepack enable
      - name: set yarn version
        run: yarn set version stable
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: cypress-cache-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - run: yarn add cypress@13.14.2
      - name: Install deps üì¶
        uses: cypress-io/github-action@v6
        with:
          install: true
          runTests: false
          build: yarn build
          cache-key: cypress-cache-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Save build folder
        uses: actions/upload-artifact@v4
        with:
          name: build
          if-no-files-found: error
          path: dist
          include-hidden-files: true
      - name: Before run üß∫
        if: ${{ inputs.before-run }}
        run: ${{ inputs.before-run }}

  # the N parallel E2E testing jobs we create
  e2eTests:
    if: ${{ inputs.nE2E > 0 }}
    needs: prepare
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.prepare.outputs.matrixE2E) }}
    steps:
      - name: Debug inputs üêû
        if: ${{ inputs.debug-inputs }}
        env:
          WORKFLOW_INPUTS: ${{ toJson(inputs) }}
        run: echo "$WORKFLOW_INPUTS"

      - name: Checkout üõé
        uses: actions/checkout@v4
      - name: Download the cypress timings file
        uses: actions/download-artifact@v4
        with:
          name: mf_rspack_template_cypress_timings.json
          path: .
      - name: enable corepack
        run: corepack enable
      - name: set yarn version
        run: yarn set version stable
      - name: Download the build folder
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist
      # these containers will load balance all found tests among themselves
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: cypress-cache-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Cypress tests üß™
        uses: cypress-io/github-action@v6
        # pass the machine index and the total number
        # https://github.com/bahmutov/cypress-split
        env:
          SPLIT: ${{ strategy.job-total }}
          SPLIT_INDEX: ${{ strategy.job-index }}
          SPLIT_FILE: '${{ inputs.split-file }}'
          # pass the custom list of specs if needed
          SPEC: '${{ inputs.spec }}'
          SKIP_SPEC: '${{ inputs.skip-spec }}'
          # pass the DEBUG environment variable
          DEBUG: ${{ inputs.debug }}
        # pass the rest of the commands via Cypress GH Action
        with:
          config: ${{ inputs.config }}
          config-file: ${{ inputs.config-file }}
          # Cypress.env values
          env: '${{ inputs.env }}'
          browser: ${{ inputs.browser }}
          # build: ${{ inputs.build }}
          command: ${{ inputs.command }}
          start: ${{ inputs.start }}
          start-windows: ${{ inputs.start-windows }}
          install: true
          install-command: ${{ inputs.install-command }}
          runTests: ${{ inputs.runTests }}
          wait-on: ${{ inputs.wait-on }}
          wait-on-timeout: ${{ inputs.wait-on-timeout }}
          working-directory: ${{ inputs.working-directory }}
          headed: ${{ inputs.headed }}
          spec: ${{ inputs.spec }}
          project: ${{ inputs.project }}
          command-prefix: ${{ inputs.command-prefix }}
          cache-key: cypress-cache-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
          quiet: ${{ inputs.quiet }}
          publish-summary: ${{ inputs.publish-summary }}

      # capture screenshots, videos, Mochawesome reports
      # in a single test artifact so that relative paths work
      # capture screenshots, videos, Mochawesome reports, coverage folder
      # https://github.com/actions/upload-artifact
      - uses: actions/upload-artifact@v4
        if: ${{ inputs.store-artifacts && always() }}
        with:
          name: cypress-split-results-e2e-${{ strategy.job-index }}
          path: |
            cypress/results
            ${{ inputs.split-file }}
          if-no-files-found: ignore

      - name: Extract branch name
        if: failure()
        shell: bash
        run: |
          # Short name for current branch. For PRs, use target branch (base ref)
          GIT_BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          echo "##[set-output name=branch;]$(echo ${GIT_BRANCH})"
        id: extract_branch
      - name: Get current time
        uses: josStorer/get-current-time@v2.1.2
        id: current-time
        with:
          format: YYYYMMDD-HH:mm
          utcOffset: '+08:00'
      - name: log in to gcp
        if: failure()
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SHARED_KEY }}'
      - name: upload tests screenshots to bucket
        if: failure()
        uses: 'google-github-actions/upload-cloud-storage@v2'
        with:
          path: '/home/runner/work/mf-rspack-template/mf-rspack-template/cypress/screenshots'
          destination: 'mf_rspack_template_integration_tests_cypress_outputs-kov-test/${{ steps.extract_branch.outputs.branch }}/${{ steps.current-time.outputs.formattedTime }}'
      - name: upload tests videos to bucket
        if: failure()
        uses: 'google-github-actions/upload-cloud-storage@v2'
        with:
          path: '/home/runner/work/mf-rspack-template/mf-rspack-template/cypress/videos'
          destination: 'mf_rspack_template_integration_tests_cypress_outputs-kov-test/${{ steps.extract_branch.outputs.branch }}/${{ steps.current-time.outputs.formattedTime }}'
      - name: link to the tests
        if: failure()
        run: |
          # The pr tests should be in the following link.
          # The link structure is https://console.cloud.google.com/storage/browser/mf_rspack_template_integration_tests_cypress_outputs-kov-test/{{ ###BRANCH_NAME### }}
          echo The pr tests are in:
          echo https://console.cloud.google.com/storage/browser/mf_rspack_template_integration_tests_cypress_outputs-kov-test/${{ steps.extract_branch.outputs.branch }}/${{ steps.current-time.outputs.formattedTime }}

  # the N parallel Component testing jobs we create
  componentTests:
    if: ${{ inputs.nComponent > 0 }}
    needs: prepare
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.prepare.outputs.matrixComponent) }}
    env:
      FRONTEGG_AUTH_URL: https://auth.kov-test.notprod.me
      FRONTEGG_APPLICATION_ID: your-application-id
      RUNNING_IN_CYPRESS: true
      HOTJAR_ENABLED: false
      NODE_ENV: production
    steps:
      - name: Debug inputs üêû
        if: ${{ inputs.debug-inputs }}
        env:
          WORKFLOW_INPUTS: ${{ toJson(inputs) }}
        run: echo "$WORKFLOW_INPUTS"

      - name: Checkout üõé
        uses: actions/checkout@v4
      - name: enable corepack
        run: corepack enable
      - name: set yarn version
        run: yarn set version stable
      - name: Download the build folder
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: cypress-cache-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      # these containers will load balance all found tests among themselves
      - name: Cypress tests üß™
        uses: cypress-io/github-action@v6
        # pass the machine index and the total number
        # https://github.com/bahmutov/cypress-split
        env:
          SPLIT: ${{ strategy.job-total }}
          SPLIT_INDEX: ${{ strategy.job-index }}
          # pass the custom list of specs if needed
          SPEC: '${{ inputs.spec }}'
          SKIP_SPEC: '${{ inputs.skip-spec }}'
          # pass the DEBUG environment variable
          DEBUG: ${{ inputs.debug }}
        # pass the rest of the commands via Cypress GH Action
        with:
          config: ${{ inputs.config }}
          config-file: ${{ inputs.config-file }}
          # Cypress.env values
          env: '${{ inputs.env }}'
          browser: ${{ inputs.browser }}
          # build: ${{ inputs.build }}
          command: ${{ inputs.command }}
          install: true
          install-command: ${{ inputs.install-command }}
          runTests: ${{ inputs.runTests }}
          working-directory: ${{ inputs.working-directory }}
          headed: ${{ inputs.headed }}
          spec: ${{ inputs.spec }}
          project: ${{ inputs.project }}
          command-prefix: ${{ inputs.command-prefix }}
          cache-key: cypress-cache-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
          quiet: ${{ inputs.quiet }}
          component: true

      # capture screenshots, videos, Mochawesome reports
      # in a single test artifact so that relative paths work
      # capture screenshots, videos, Mochawesome reports, coverage folder
      # https://github.com/actions/upload-artifact
      - uses: actions/upload-artifact@v4
        if: ${{ inputs.store-artifacts && always() }}
        with:
          name: cypress-split-results-component-${{ strategy.job-index }}
          path: cypress/results
          if-no-files-found: ignore

      - name: Extract branch name
        if: failure()
        shell: bash
        run: |
          # Short name for current branch. For PRs, use target branch (base ref)
          GIT_BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          echo "##[set-output name=branch;]$(echo ${GIT_BRANCH})"
        id: extract_branch
      - name: Get current time
        uses: josStorer/get-current-time@v2.1.2
        id: current-time
        with:
          format: YYYYMMDD-HH:mm
          utcOffset: '+08:00'
      - name: log in to gcp
        if: failure()
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SHARED_KEY }}'
      - name: upload tests screenshots to bucket
        if: failure()
        uses: 'google-github-actions/upload-cloud-storage@v2'
        with:
          path: '/home/runner/work/mf-rspack-template/mf-rspack-template/cypress/screenshots'
          destination: 'mf_rspack_template_integration_tests_cypress_outputs-kov-test/${{ steps.extract_branch.outputs.branch }}/${{ steps.current-time.outputs.formattedTime }}'
      - name: upload tests videos to bucket
        if: failure()
        uses: 'google-github-actions/upload-cloud-storage@v2'
        with:
          path: '/home/runner/work/mf-rspack-template/mf-rspack-template/cypress/videos'
          destination: 'mf_rspack_template_integration_tests_cypress_outputs-kov-test/${{ steps.extract_branch.outputs.branch }}/${{ steps.current-time.outputs.formattedTime }}'
      - name: link to the tests
        if: failure()
        run: |
          # The pr tests should be in the following link. 
          # The link structure is https://console.cloud.google.com/storage/browser/mf_rspack_template_integration_tests_cypress_outputs-kov-test/{{ ###BRANCH_NAME### }}
          echo The pr tests are in:
          echo https://console.cloud.google.com/storage/browser/mf_rspack_template_integration_tests_cypress_outputs-kov-test/${{ steps.extract_branch.outputs.branch }}/${{ steps.current-time.outputs.formattedTime }}

  merge-split-timings:
    # only merge timings if E2E specs were successful
    if: ${{ inputs.split-file }}
    needs: [e2eTests]
    outputs:
      timings: ${{ steps.merge.outputs.merged-timings }}
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout üõé
        uses: actions/checkout@v4
      - name: enable corepack
        run: corepack enable
      - name: set yarn version
        run: yarn set version stable
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: cypress-cache-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install dependencies üß™
        uses: cypress-io/github-action@v6
        with:
          install: true
          runTests: false
          cache-key: cypress-cache-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      # https://github.com/actions/download-artifact
      - uses: actions/download-artifact@v4
        # download all test results artifacts from the previous jobs
        # it would be nice to download only the split jobs test artifacts
        # but cannot specify the pattern of the test artifacts yet
        # https://github.com/actions/download-artifact/issues/103
        with:
          path: split-results
      - name: Display structure of downloaded files
        run: ls -R split-results

      # to merge timings you need v1.13+ of cypress-split
      - name: Merge split timings
        id: merge
        run: |
          npx cypress-split-merge \
            --parent-folder split-results \
            --split-file ${{ inputs.split-file }} \
            --output ${{ inputs.split-file }} \
            --set-gha-output merged-timings
        env:
          # pass the DEBUG environment variable
          DEBUG: ${{ inputs.debug }}

      - name: Print timings üñ®Ô∏è
        run: |
          echo off
          echo Merged timings
          echo '${{ steps.merge.outputs.merged-timings }}'

      - uses: actions/upload-artifact@v4
        with:
          name: merged-split-file
          path: '${{ inputs.split-file }}' 